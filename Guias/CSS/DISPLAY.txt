DISPLAY
diplay: inline, block; é capaz de transformar elementos inline em block e vice-versa
none; oculta o elemento


FLEXBOX
para utilizar esse recurso é necessário ter no HTML ao menos um elemento (container) contendo outros (itens).


flex-direction:
row / row-reverse os itens são organizados em forma de linha

column / column-reverse os itens são organizados em forma de coluna





flex-wrap:
faz com que ocorra a “quebra de linha” nos itens.

nowrap: Todos os itens serão dispostos em uma linha;

wrap: Ocorrerá a quebra de linha e os itens mais à direita serão deslocados para a linha de baixo;

wrap-reverse: os itens mais à direita serão deslocados para a linha de cima.

gap: 38px; serve para criar espaços entre os itnes de um container quando houver quebra de linha.





flex-flow:
é uma forma abreviada para a escrita das propriedades flex-direction e flex-wrap(nesta ordem).





justify-content:
define o alinhamento dos itens ao longo do eixo principal do container.

flex-start(padrão)

flex-end: Os itens são alinhados a partir do fim do eixo principal;

center

space-between: Distribui os elementos no container;

space-around: Distribui os elementos no container adicionando uma margen;

space-evenly: distribui os elementos com um espaçamento igual no container.





align-content:
Essa propriedade define como as linhas são distribuídas ao longo do eixo transversal do container.

stretch: Ocupando toda a altura disponível;

flex-start: As linhas são distribuídas a partir do início do eixo transversal;

flex-end: As linhas são distribuídas a partir do fim do eixo transversal;

center

space-between: A primeira linha é deslocada para o início do eixo transversal, 
a última é deslocada para o final do eixo transversal e as demais são distribuídas 
uniformemente entre eles;

space-around: As linhas são uniformemente distribuídas ao longo do eixo transversal. 
Aqui, porém, são atribuídas margens iguais à esquerda e à direita (ou acima e abaixo, dependendo da direção do eixo transversal). 
Por isso a primeira e a última linha não ficam “coladas” nas bordas do container.





align-items:
Essa propriedade define como os itens são distribuídos ao longo do eixo transversal do container.
Só terá efeito se o container tiver uma altura definida.

stretch (padrão): Os itens serão esticados para preencher toda a dimensão do eixo transversal (altura ou largura);

flex-start: Os itens são deslocadas para o início do eixo transversal;

flex-end: Os itens são deslocadas para o final do eixo transversal;

center

baseline: Os itens são alinhados a partir da base da primeira linha de texto de cada um.

Order: [número] O valor numérico atribuído a essa propriedade define a ordem do item. 
Por exemplo, o valor 2 faz com que o item seja o segundo item ao longo do eixo principal, 
enquanto o valor -1 faz com que ele apareça antes do primeiro.





flex-grow: [número] Define a proporção com que um item deve crescer caso seja necessário. O container pai precisa do display: flex;
já o filho não (deve ser aplicado apenas no filho.)





flex-shrink: [0, 1(Padrão), 2, 3] Define a proporção com que um item deve encolher caso seja necessário.





flex-basis: 200px, %, auto Define a largura (ou altura(o container precisa estar em coluna)) inicial do elemento.





flex:(flex-grow, flex-shrink e flex-basis) forma abreviada.






align-self:
permite sobrescrever no item o comportamento que foi definido pela propriedade align-items.

stretch: O item será esticado para preencher toda a dimensão do eixo transversal (altura ou largura);

flex-start: O item é deslocado para o início do eixo transversal;

flex-end: O item é deslocado para o final do eixo transversal;

center:

baseline: O item é alinhado a partir da base da primeira linha de texto dos demais.